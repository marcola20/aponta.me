// <auto-generated />
using System;
using ApontaMe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApontaMe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250713202302_UpdUsuario")]
    partial class UpdUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("ApontaMe.Models.Apontamento", b =>
                {
                    b.Property<int>("ApontamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Entrada")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Intervalo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Saida")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApontamentoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Apontamentos");
                });

            modelBuilder.Entity("ApontaMe.Models.ApontamentoTarefa", b =>
                {
                    b.Property<int>("ApontamentoTarefaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApontamentoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Fim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Inicio")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApontamentoTarefaID");

                    b.HasIndex("ApontamentoID");

                    b.ToTable("ApontamentoTarefaS");
                });

            modelBuilder.Entity("ApontaMe.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pessoa_Fisica")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pessoa_Juridica")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApontaMe.Models.Apontamento", b =>
                {
                    b.HasOne("ApontaMe.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApontaMe.Models.ApontamentoTarefa", b =>
                {
                    b.HasOne("ApontaMe.Models.Apontamento", "Apontamento")
                        .WithMany("Tarefas")
                        .HasForeignKey("ApontamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apontamento");
                });

            modelBuilder.Entity("ApontaMe.Models.Apontamento", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
